<?php

define('ABSPATH', dirname(__FILE__));

// Open Twitter-PHP library
require(ABSPATH.'/Twitter-PHP/twitter.class.php');
$twitter = new Twitter('pRt6zodBh1CdqyPtcyg','CPIzussNrhGCKmfIqFRFGZ8fDdyhjwK6F2Z73fPx0','accesstoken','accesstoken-secret');
$channel = $twitter->load(Twitter::ME_AND_FRIENDS);

// Start new GTK window
$wnd = new GtkWindow();
$wnd->set_title('Charry');
$wnd->set_size_request(400,600);
// Set quit handler
$wnd->connect_simple('destroy', array('Gtk', 'main_quit'));

// Add new vertical organizer
$wnd->add($vbox = new GtkVBox());

// Start new menubar
$menubar = new GtkMenuBar();
// Add menubar to organizer
$vbox->pack_start($menubar, false, false);
// Make the File menu item
$file = new GtkMenuItem('_File');
// Add the File menu item to the menubar
$menubar->append($file);
// Make the File menu itself
$menuFile = new GtkMenu();
// Make the option 'Quit'
$quit = new GtkMenuItem('_Quit');
// Add the Quit option to the File menu
$menuFile->append($quit);
// Attach the File's menu to its menu item
$file->set_submenu($menuFile);

// Start paned vertical split (for tweets/submit box)
$vpane = new GtkVPaned();
// Set separator width to 5
$vpane->set_border_width(5);
// Set default separator position
$vpane->set_position(460);

// Start scrolled window
$tweetScroll = new GtkScrolledWindow();
// Hide scrollbars when we don't need them
$tweetScroll->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
// Create new VBox
$tweets = new GtkVBox();
// Load up them tweets!
foreach($channel->status as $status) {
	// If this user's avatar isn't cached, cache it!
	if(!file_exists(ABSPATH.'/cache/images/'.$status->user->screen_name.'.cache')) {
		file_put_contents(ABSPATH.'/cache/images/'.$status->user->screen_name.'.cache', file_get_contents(htmlspecialchars($status->user->profile_image_url)));
	}
	// Load the avatar from the cache
	$avatar = GtkImage::new_from_file(ABSPATH.'/cache/images/'.$status->user->screen_name.'.cache');
	// Make their username a GTK label, justified left, selectable, and wrapable.
	$name = new GtkLabel();
	$name->set_justify(Gtk::JUSTIFY_LEFT);
	$name->set_selectable(true);
	$name->set_line_wrap(true);
	$name->set_text(utf8_decode($status->user->screen_name));
	// Make their tweet a GTK label, justified left, selectable, and wrapable.
	$text = new GtkLabel();
	$text->set_justify(Gtk::JUSTIFY_LEFT);
	$text->set_selectable(true);
	$text->set_line_wrap(true);
	$text->set_size_request(300, -1);
	$text->set_text(utf8_decode($status->text));
	// Make container for tweet
	$tweetBox = new GtkFixed();
	// Set size
	$tweetBox->set_size_request(370, -1);
	// Add stuff to it
	$tweetBox->put($avatar, 0, 0);
	$tweetBox->put($name, 60, 0);
	$tweetBox->put($text, 60, 15);
	// Add tweet box to tweets window
	$tweets->pack_start($tweetBox);
}
// Add tweets to scrolled window
$tweetScroll->add_with_viewport($tweets);
// Add scrolled window to vertical pane
$vpane->add1($tweetScroll);

// Create text box for submitting tweets
$sbox = new GtkTextView();
$sboxB = new GtkTextBuffer();
$sbox->set_buffer($sboxB);
$sbox->set_wrap_mode(Gtk::WRAP_WORD);
$sbox->connect('key-press-event', 'on_key_press', $sbox, $sboxB, $tweets);
// Add submit box to pane split
$vpane->add2($sbox);

// Add pane split to vertical organizer
$vbox->pack_start($vpane);

// Create statusbar
$status = new GtkStatusbar();
$eventbox = new GtkEventBox();
$eventbox->add($status);
$vbox->pack_start($eventbox, false, false);
$status->push($status->get_context_id('start'), 'Loaded 20 tweets.');

$sbox->grab_focus();

// Let the magic begin!
$wnd->show_all();
Gtk::main();

// Process tweet submission
function on_key_press($widget, $event, $sbox, $sboxB, $tweets) {
	global $twitter, $status;
	// Did the user press Enter?
	if($event->keyval == Gdk::KEY_Return) {
		// If they pressed Shift+Enter, treat it as a new line
		if($event->state & Gdk::SHIFT_MASK) {
			return false;
		}
		// Set statusbar
		$status->push($status->get_context_id('submit'), 'Submitting tweet...');
		// Get text from the submit box
		$input = $sboxB->get_text($sboxB->get_start_iter(), $sboxB->get_end_iter());
		// Encode and send to Twitter!
		$twitter->send(utf8_encode($input));
		// Update statusbar once more
		$status->push($status->get_context_id('submit'), 'Tweet successfully submitted.');
		// Empty out the submit box
		$sboxB->set_text('');
		return true;
	}
	// I guess not :(
	else {
		return false;
	}
}

?>
